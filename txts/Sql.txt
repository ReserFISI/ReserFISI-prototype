#include <iostream>
#include <libpq-fe.h>
#include "crow.h"
#include <fstream>
#include <json/json.h>

using namespace crow;

int main() {

    SimpleApp app; 
    std::ifstream file("data.json");
    Json::Value jsonData;
    Json::CharReaderBuilder readerBuilder;
    std::string errs;

    // Configuración de la conexión con los detalles correctos
    const char* conninfo = "dbname=hola user=sebastianrojas password=1234";
    PGconn* conn = PQconnectdb(conninfo);

    // Verificar el estado de la conexión
    if (PQstatus(conn) != CONNECTION_OK) {
        std::cerr << "Connection to database failed: " << PQerrorMessage(conn) << std::endl;
        PQfinish(conn);
        return 1;
    }

    std::cout << "Connected to the database!" << std::endl;

    CROW_ROUTE(app, "/")([](){
        return "Hello world";
    });

    if (!Json::parseFromStream(readerBuilder, file, &jsonData, &errs)) {
        std::cerr << "Error al parsear el JSON: " << errs << std::endl;
        return 1;
    }

    // Ruta que devuelve el contenido del JSON
    CROW_ROUTE(app, "/json")([&jsonData]{
        crow::json::wvalue jsonResponse;

        // Copiar el contenido del JSON leído a jsonResponse
        for (auto it = jsonData.begin(); it != jsonData.end(); ++it) {
            jsonResponse[it.key().asString()] = it->asString();
        }

        return jsonResponse;
    });

    app.port(18080).multithreaded().run();


    PQfinish(conn);
    return 0;
}
