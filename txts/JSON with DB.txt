#include <iostream>
#include <fstream>
#include <json/json.h>
#include <libpq-fe.h>

int main() {
    // Leer el archivo JSON
    std::ifstream file("data.json");
    Json::Value root;
    Json::Reader reader;

    if (!reader.parse(file, root)) {
        std::cerr << "Error parsing JSON file" << std::endl;
        return 1;
    }

    std::string nombre = root["nombre"].asString();
    int edad = root["edad"].asInt();
    std::string trabajo = root["trabajo"].asString();
    std::string apellido = root["Apellido"].asString();
    std::string segundo_nombre = root["Segundo_nombre"].asString();

    // Conectar a la base de datos PostgreSQL
    const char* conninfo = "dbname=prueba user=sebastianrojas password=1234";
    PGconn* conn = PQconnectdb(conninfo);

    if (PQstatus(conn) != CONNECTION_OK) {
        std::cerr << "Connection to database failed: " << PQerrorMessage(conn) << std::endl;
        PQfinish(conn);
        return 1;
    }

    // Insertar datos en la base de datos
    std::string query = "INSERT INTO usuarios (nombre, edad, trabajo, apellido, segundo_nombre) VALUES ('" +
                        nombre + "', " + std::to_string(edad) + ", '" + trabajo + "', '" + apellido +
                        "', '" + segundo_nombre + "')";

    PGresult* res = PQexec(conn, query.c_str());

    if (PQresultStatus(res) != PGRES_COMMAND_OK) {
        std::cerr << "INSERT command failed: " << PQerrorMessage(conn) << std::endl;
        PQclear(res);
        PQfinish(conn);
        return 1;
    }

    std::cout << "Data inserted successfully" << std::endl;

    // Limpiar y cerrar
    PQclear(res);
    PQfinish(conn);

    return 0;
}
